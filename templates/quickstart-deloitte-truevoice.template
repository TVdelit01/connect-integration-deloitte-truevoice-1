AWSTemplateFormatVersion: 2010-09-09
Description: AWS Lambda function to make API Gateway call.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Minimum requirements
        Parameters:
          - TermsAndConditions
          - VolumeOfData
          - PermissionToTransfer
          - PermissionToProcess
          - MFA
      - Label:
          default: Customer information
        Parameters:
          - CustomerName
          - CustomerRegisteredAddress
          - CustomerIndustry
          - BriefDescriptionOfCustomer
          - PreviousCustomerNames
          - ListedOrQuoted
          - PersonCompletingForm
          - PersonCompletingEmailAddress
          - CustomerMainContactName
          - CustomerMainContactEmail
      - Label:
          default: Scope
        Parameters:
          - ScopeOfServices1
          - ScopeOfServices2
      - Label:
          default: TrueVoice Front End 
        Parameters:
          - UsersPov
      - Label:
          default: TrueVoice Audio Recordings
        Parameters:
          - AudioFormatsFile
          - AudioFormatsCodecs
          - MultiChannel
          - Metadata
          - SendingFiles
          - DataRetention
    ParameterLabels:
      VolumeOfData:
        default: Volume of data
      PermissionToTransfer:
        default: Permission to transfer
      PermissionToProcess:
        default: Permission to process
      MFA:
        default: Mult factor authentication (MFA)
      DataRetention:
        default: Data Retention
      SendingFiles:
        default: Sending files
      Metadata:
        default: Metadata
      MultiChannel:
        default: Multi Channel
      AudioFormatsCodecs:
        default: What codecs would TrueVoice need to process?
      AudioFormatsFile:
        default: What file formats would TrueVoice need to process?
      UsersPov:
        default: Users - PoV
      CustomerMainContactName:
        default: Customer main contact Name
      CustomerMainContactEmail:
        default: Customer main contact email
      CustomerName:
        default: Customer name
      PersonCompletingForm:
        default: Person completing form
      PersonCompletingEmailAddress:
        default: Person completing email address
      CustomerIndustry:
        default: Customer industry
      ListedOrQuoted:
        default: Are you listed?
      PreviousCustomerNames:
        default: Previous Customer names
      BriefDescriptionOfCustomer:
        default: Brief description of Customer
      CustomerRegisteredAddress:
        default: Customer registered address
      ScopeOfServices1:
        default: Level 1 Services
      ScopeOfServices2:
        default: Level 2 Services
      TermsAndConditions:
        default: Terms & conditions
Parameters:
  TermsAndConditions:
    Type: String
    Description: By submitting this form you agree that Deloitte may process any the personal data supplied by you (to include - name, email address, addresses and any incidental personal information captured on recordings) as necessary in connection with the Deloitte TrueVoice service. For more details on how Deloitte handles and shares your information, your rights and how to contact us, please follow to https://www2.deloitte.com/uk/en/footerlinks1/privacy.html. Please note that any agreement to provide the True Voice service is subject the information we receive from you and agreeing a suitable contract between us for your selected services. In addition, you agree to our terms by submitting this form, you are agreeing to our Terms & Conditions. Please view these at the following link https://d154d4u55he2e5.cloudfront.net.
    AllowedValues: 
      - 'Yes'
      - 'No'
  ScopeOfServices1:
    Type: String
    Description: For the PoV, which are you looking to make use of our level 1 services? The level 1 services will be discussed in more detail in the workshop session.
    AllowedValues: 
      - 'Yes'
      - 'No'
  ScopeOfServices2:
    Type: String
    Description: For the PoV, which are you looking to make use of our level 2 services? The level 2 services will be discussed in more detail in the workshop session.
    AllowedValues: 
      - 'Yes'
      - 'No'
  MFA:
    Description: Users for the Deloitte Hosted Web Application will be provisioned logins with MFA and username and password. Please confirm this is appropriate.
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  PermissionToProcess:
    Description: By submitting this application, you are permitting us to process this data on the TrueVoice platform for the Deloitte Provisioned AWS cloud in eu-west2 London region.
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  PermissionToTransfer:
    Description: Please confirm that it is appropriate for you to transfer this data to TrueVoice for processing and use in this engagment.
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  VolumeOfData:
    Description: Please confirm you are able to provide at least 1,000 hours of audio, in English, will be required for this engagement (maximum of 3,000 hours). 
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  DataRetention:
    Description: For the POV, we will hold your data for 90 days post PoV completion, after which data is deleted. Please confirm this is appropriate.
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  SendingFiles:
    Description: Are you able to push media into a dedicated pre-specified TrueVoice S3 bucket (to be provided)?
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  Metadata:
    Description: Are you able to supply alongside the media files the minimum required metadata and in the required format (please refer to deployment guide)? Please also detail any other metadata that can be provided beyond the minimum amount.
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  MultiChannel:
    Description: For each of the audio formats listed above, please list whether the audio will be single channel, or multi-channel and if so whether callers and operator audio are separated by channel.
    Type: String
    AllowedValues: 
      - Unknown
      - Single (Mono)
      - Multi (Stereo)
  AudioFormatsCodecs:
    Description: What file formats would TrueVoice need to process?
    Type: String
    AllowedValues: 
      - Unknown
      - .mp3
      - .wav
      - .mov
  AudioFormatsFile:
    Description: What codecs would TrueVoice need to process?
    Type: String
    AllowedValues: 
      - Unknown
      - G729a
      - G711
  UsersPov:
    Description: How many Deloitte Hosted Web Application user profiles would you require? This is limited to 5 for a POV. Deloitte will request these user details in the kick off workshop. 
    Type: String
  CustomerName:
    Description: Please state the name of the company this service is for
    Type: String
  CustomerMainContactName:
    Description: Person responsible for the TrueVoice service
    Type: String
  CustomerMainContactEmail:
    Description: Person responsible for the TrueVoice service
    Type: String
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
  PersonCompletingForm:
    Type: String
  PersonCompletingEmailAddress:
    Type: String
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
  CustomerIndustry:
    Description: Please state the industry
    Type: String
  ListedOrQuoted:
    Type: String
    AllowedValues: 
      - 'Yes'
      - 'No'
  PreviousCustomerNames:
    Description: Please list any other company names in the last 3 years
    Type: String
  BriefDescriptionOfCustomer:
    Description: Please provide a brief overview of the company's work
    Type: String
  CustomerRegisteredAddress:
    Description: Please state the address of the company this service is for
    Type: String
Resources:
  TVQSCW01:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${TVQSL01}'
      RetentionInDays: 60
  TVQSCR01:
    Type: Custom::TVQSCR01
    Properties:
      ServiceToken: !GetAtt 'TVQSL01.Arn'
      accountNum: !Sub ${AWS::AccountId}
      awsRegion: !Sub ${AWS::Region}
      customerName: !Ref CustomerName
      customerRegisteredAddress: !Ref CustomerRegisteredAddress
      customerIndustry: !Ref CustomerIndustry
      briefDescriptionOfCustomer: !Ref BriefDescriptionOfCustomer
      previousCustomerNames: !Ref PreviousCustomerNames
      listedOrQuoted: !Ref ListedOrQuoted
      personCompletingForm: !Ref PersonCompletingForm
      personCompletingEmailAddress: !Ref PersonCompletingEmailAddress
      customerMainContactName: !Ref CustomerMainContactName
      customerMainContactEmail: !Ref CustomerMainContactEmail
      usersPov: !Ref UsersPov
      audioFormatsFile: !Ref AudioFormatsFile
      audioFormatsCodecs: !Ref AudioFormatsCodecs
      multiChannel: !Ref MultiChannel
      metadata: !Ref Metadata
      sendingFiles: !Ref SendingFiles
      dataRetention: !Ref DataRetention
      volumeOfData: !Ref VolumeOfData
      permissionToTransfer: !Ref PermissionToTransfer
      permissionToProcess: !Ref PermissionToProcess
      scopeOfServices1: !Ref ScopeOfServices1
      scopeOfServices2: !Ref ScopeOfServices2
      termsAndConditions : !Ref TermsAndConditions
      mfa: !Ref MFA
  TVQSIAM01:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Path: /
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'logs:DescribeLogStreams'
            Resource: "*"
  TVQSL01:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Calls API
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt 
        - TVQSIAM01
        - Arn
      Timeout: 60
      Code:
        ZipFile: |
          import json
          import logging
          import boto3
          import signal
          from urllib.parse import urlparse, urlencode
          from urllib.request import urlopen, Request, build_opener, HTTPSHandler
          from urllib.error import HTTPError

          def handler(event, context):
            p=event['ResourceProperties']
            signal.alarm(context.get_remaining_time_in_millis() - 1000)
            try:
              if event['RequestType'] == 'Create':
                payload = bytes(json.dumps( { "RequestType": "Create","cn":p['customerName'],"cra":p['customerRegisteredAddress'],"ci":p['customerIndustry'],"bdoc":p['briefDescriptionOfCustomer'],"pcn":p['previousCustomerNames'],"loq":p['listedOrQuoted'],"pcf":p['personCompletingForm'],"pcea":p['personCompletingEmailAddress'],"cmcn":p['customerMainContactName'],"cmce":p['customerMainContactEmail'],"up":p['usersPov'],"aff":p['audioFormatsFile'],"afc":p['audioFormatsCodecs'],"mch":p['multiChannel'],"me":p['metadata'],"sf":p['sendingFiles'],"dr":p['dataRetention'],"vod":p['volumeOfData'],"ptt":p['permissionToTransfer'],"ptp":p['permissionToProcess'],"mf":p['mfa'],"sos1":p['scopeOfServices1'],"sos2":p['scopeOfServices2'],"tac":p['termsAndConditions'],"an":p['accountNum'],"re":p['awsRegion'] }), encoding='utf8')
                handler = build_opener(HTTPSHandler)
                url = 'https://sd5f44wtp3.execute-api.eu-west-2.amazonaws.com/prod/req'
                rq = Request(url, data=payload)
                rq.add_header('Content-Type', 'application/json')
                rq.add_header('x-api-key', 'Knab57eJ6n2eml9GprBGz3xkMXmVE8kp8FGlOuvs')
                rq.get_method = lambda: 'POST'
                response = handler.open(rq)
                send_response(event, context, "SUCCESS", {"TrueVoicePoVRegId": json.loads(response.read())['body']})
              elif event['RequestType'] == 'Update':
                send_response(event, context, "SUCCESS", {"Message": "Resource update successful!"})
              elif event['RequestType'] == 'Delete':
                send_response(event, context, "SUCCESS", {"Message": "Resource deletion successful!"})
              else:
                send_response(event, context, "FAILED", {"Message": "Unexpected event received from CloudFormation"})
            except:
              send_response(event, context, "FAILED", {"Message": "Exception during processing"})
          def send_response(event, context, response_status, response_data):
            response_body = bytes(json.dumps( { "Status": response_status,"Reason": "See the details in CloudWatch Log Stream: " + context.log_stream_name,"PhysicalResourceId": context.log_stream_name,"StackId": event['StackId'],"RequestId": event['RequestId'],"LogicalResourceId": event['LogicalResourceId'],"Data": response_data } ), encoding='utf8')
            opener = build_opener(HTTPSHandler)
            request = Request(event['ResponseURL'], data=response_body)
            request.add_header('Content-Type', '')
            request.add_header('Content-Length', len(response_body))
            request.get_method = lambda: 'PUT'
            response = opener.open(request)
            
          def timeout_handler(_signal, _frame):
            raise Exception('Time exceeded')
            
          signal.signal(signal.SIGALRM, timeout_handler)
Outputs:
  TrueVoicePoVRegId:
    Description: TrueVoice PoV Registration Id
    Value:
      Fn::GetAtt:
      - TVQSCR01
      - TrueVoicePoVRegId